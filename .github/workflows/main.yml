name: Test


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  GO_INSTALL_VER: "1.17.10"
  GVM_DIR: "$HOME/.gvm"

jobs:

  usage-tests-zsh:
    runs-on: ubuntu-latest

    container:
      image: zshusers/zsh
      options: --cpus 1

    steps:
      - uses: actions/checkout@v3

      - name: Install and run
        shell: bash
        run: |
          export GVM_DIR=$(eval "echo $GVM_DIR")
          export SHELL=$(which zsh)
          apt-get update \
            && apt-get install -y curl \
            && rm -rf /var/lib/apt/lists/*
          mkdir -p "$GVM_DIR/versions"
          touch "$GVM_DIR/.gvmrc"
          {
            cat ./gvm.sh
            echo "gvm install $GO_INSTALL_VER"
            echo "gvm default $GO_INSTALL_VER"
            echo "gvm ls"
            echo "gvm info"
            echo "gvm rm $GO_INSTALL_VER"
          } > run.sh
          zsh < <(cat run.sh)


  usage-tests-bash:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install
        shell: bash
        run: |
          mkdir -p "$GVM_DIR/versions"
          touch "$GVM_DIR/.gvmrc"
          cat ./gvm.sh >> "$HOME/.bash_profile"

      - name: Run usage
        shell: bash
        run: |
          {
            echo -e "gvm install $GO_INSTALL_VER\n"
            echo -e "gvm default $GO_INSTALL_VER\n"
            echo -e "gvm ls\n"
            echo -e "gvm info\n"
            echo -e "gvm rm $GO_INSTALL_VER\n"
          } >> "$HOME/.bash_profile"
          source "$HOME/.bash_profile"

  install-tests:

    runs-on: ubuntu-latest

    env:
      INSTALL_URL: "https://raw.githubusercontent.com/benms/gvm/main/install.sh"
      GVM_SH_URL: "https://raw.githubusercontent.com/benms/gvm/main/gvm.sh"
      EXPECT_DOWNLOAD_STATUS_CODE: "200" #404 200
      BEGIN_BLOCK: "#-begin-GVM-block-"
      END_BLOCK: "#-end-GVM-block-"

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '15'

      - run: npm install -g bats

      - uses: actions/checkout@v3

      - name: Install
        if: ${{github.event.repository.public}}
        shell: bash
        run: |
          curl -o- $INSTALL_URL | bash

      - name: Install
        if: ${{!github.event.repository.public}}
        shell: bash
        run: |
          cat ./install.sh | bash
          cp ./gvm.sh $HOME/.gvm/

      - name: Run tests
        shell: bash
        run: bats --verbose-run ./tests/after-install.bats

  linters:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest

  check:
    if: always()

    needs:
    - usage-tests-zsh
    - usage-tests-bash
    - install-tests
    - linters

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        allowed-failures: linters
        jobs: ${{ toJSON(needs) }}
